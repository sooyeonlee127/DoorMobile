{"version":3,"file":"static/js/873.087e585c.chunk.js","mappings":"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","sources":["components/contact/ContactInfo/ContactInfo.style.tsx","components/contact/ContactInfo/ContactInfo.tsx","components/contact/index.style.tsx","components/contact/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport theme from '@/styles/theme';\nimport { MdTextResponsive, SmTextResponsive } from '@/styles';\nimport { css } from '@emotion/react';\n\nexport const ContactContainer = styled.div`\n  padding: 25px 0px;\n  font-family: GowunDodum-Regular;\n`;\n\nexport const ContactBox = styled.div`\n  padding: 10px 0px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Name = styled.span`\n  font-size: ${theme.fontSizes.md};\n  ${MdTextResponsive}\n  font-weight: 1000;\n`;\n\nexport const Relation = styled.span`\n  padding: 0px 9px;\n  font-weight: 50;\n  ${SmTextResponsive};\n`;\nconst maxWidth = 460;\nconst widthSize = 230;\n","import {\n  ContactContainer,\n  ContactBox,\n  Name,\n  Relation,\n} from './ContactInfo.style';\nimport { FaPhone } from 'react-icons/fa';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../../../store/index';\nimport { useEffect } from 'react';\nimport { getContactList } from '@/store/contact/thunkFunctions';\nimport { changeContactPopup } from '@/store/popup/popupSlice';\nimport CommonButton from '@/components/common/CommonButton/CommonButton';\nconst ContactInfo = () => {\n  const dispatch = useDispatch();\n  const { groom, bride } = useSelector(\n    (state: RootState) => state.wedding.weddingInfo || {}\n  );\n  const temp = () => {\n    dispatch(changeContactPopup(true));\n  };\n  const clickCall = (phoneNum: string) => {\n    window.location.href = 'tel:' + phoneNum;\n  };\n  return (\n    <ContactContainer>\n      <ContactBox>\n        <Name>\n          {groom.parents.father} · {groom.parents.father}\n        </Name>\n        <Relation>의 {groom.groomRoleTypeName}</Relation>\n        <Name>{groom.name}</Name>\n        <FaPhone\n          size={'20px'}\n          style={{\n            backgroundColor: '#303030',\n            borderRadius: '100%',\n            padding: '5px',\n            marginLeft: '10px',\n          }}\n          color={'white'}\n        />\n      </ContactBox>\n      <ContactBox>\n        <Name>\n          {bride.parents.father} · {bride.parents.mother}\n        </Name>\n        <Relation>의 {bride.brideRoleTypeName}</Relation>\n        <Name>{bride.name}</Name>\n        <FaPhone\n          size={'20px'}\n          style={{\n            backgroundColor: '#303030',\n            borderRadius: '100%',\n            padding: '5px',\n            marginLeft: '10px',\n          }}\n          color={'white'}\n        />\n      </ContactBox>\n      <CommonButton btnText=\"연락하기\" clickEvent={temp}></CommonButton>\n    </ContactContainer>\n  );\n};\nexport default ContactInfo;\n","import styled from '@emotion/styled';\nimport { fadeInStyle } from '@/styles';\n\nexport const ComponentContainer = styled.div`\n  ${fadeInStyle}\n  height: 300px;\n  position: relative;\n`;\n\nexport const CheckEndBox = styled.div`\n  width: 100px;\n  height: 50px;\n  bottom: 0;\n  // background-color: yellow;\n`;\n","import React, { useEffect, useRef, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadDate } from '../../store/load/loadSlice';\nimport ContactInfo from './ContactInfo/ContactInfo';\nimport { ComponentContainer, CheckEndBox } from './index.style';\n\nconst Contact = () => {\n  const checkRef = useRef(null);\n  const dispatch = useDispatch();\n  const isDateLoad = useSelector((state: any) => state?.load?.isDateLoad);\n\n  const loaderMore = useCallback(() => {\n    if (!isDateLoad) {\n      dispatch(loadDate(true));\n    }\n  }, [isDateLoad]);\n\n  useEffect(() => {\n    if (!checkRef.current) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        setTimeout(() => {\n          loaderMore();\n        }, 1000);\n      }\n    });\n    observer.observe(checkRef.current);\n    return () => observer.disconnect();\n  }, []);\n  return (\n    <ComponentContainer>\n      <ContactInfo />\n      <CheckEndBox ref={checkRef}></CheckEndBox>\n    </ComponentContainer>\n  );\n};\nexport default Contact;\n"],"names":["ContactContainer","styled","div","_templateObject","_taggedTemplateLiteral","ContactBox","_templateObject2","Name","span","_templateObject3","theme","fontSizes","md","MdTextResponsive","Relation","_templateObject4","SmTextResponsive","ContactInfo","dispatch","useDispatch","groom","bride","useSelector","state","wedding","weddingInfo","_jsxs","children","parents","father","groomRoleTypeName","_jsx","name","FaPhone","size","style","backgroundColor","borderRadius","padding","marginLeft","color","mother","brideRoleTypeName","CommonButton","btnText","clickEvent","temp","changeContactPopup","ComponentContainer","fadeInStyle","CheckEndBox","Contact","checkRef","useRef","isDateLoad","_state$load","load","loaderMore","useCallback","loadDate","useEffect","current","observer","IntersectionObserver","_ref","entry","isIntersecting","setTimeout","observe","disconnect","ref"],"sourceRoot":""}